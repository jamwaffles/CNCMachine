# Kollmorgen AKD spindle servo

loadrt near names=near-at-speed,spindle-zero-rpm
addf near-at-speed servo-thread
addf spindle-zero-rpm servo-thread

# Velocity mode
setp cia402.3.csp-mode 0
# setp cia402.3.pos-scale 1
# Drive scales RPMs by 1000
setp cia402.3.velo-scale 1000

net akd-spindle-drv-enable  motion.motion-enabled => cia402.3.enable
net akd-spindle-drv-fault <= cia402.3.drv-fault

#from servo(ethercat) to cia402
net akd-spindle-statusword        lcec.0.5.cia-statusword => cia402.3.statusword
# net akd-spindle-opmode-display  lcec.0.5.opmode-display => cia402.3.opmode-display
# net akd-spindle-drv-act-pos     lcec.0.5.actual-position => cia402.3.drv-actual-position
net akd-spindle-drv-act-velo      lcec.0.5.actual-velocity => cia402.3.drv-actual-velocity

#from cia402 to servo(ethercat)
net akd-spindle-controlword           cia402.3.controlword => lcec.0.5.cia-controlword
# net akd-spindle-modes-of-operation  cia402.3.opmode => lcec.0.5.opmode
# net akd-spindle-drv-target-pos      cia402.3.drv-target-position => lcec.0.5.target-position
net akd-spindle-drv-target-velo       cia402.3.drv-target-velocity => lcec.0.5.target-velocity

### Spindle speed command
### `speed-out` is in RPM
net spindle-speed-cmd=rpm spindle.0.speed-out cia402.3.velocity-cmd
# 
# ### Spindle is running command. Used for drawbar interlock, etc
net spindle-speed-cmd=rpm spindle-zero-rpm.in1
setp spindle-zero-rpm.in2 0
net spindle-is-stopped spindle-zero-rpm.out
# 
# ### Spindle at speed
# net spindle-fb-rps near-at-speed.in1
net spindle-fb-rpm cia402.3.velocity-fb
setp near-at-speed.scale 1.15
net spindle-at-speed near-at-speed.out
# 
# ### Drive fault
# # net drive-error argon.drive-error
# 
### Drawbar button 
### EL7 inputs have some input filtering on them
loadrt and2 names=db-interlock
loadrt toggle names=db-toggle
addf db-interlock servo-thread
addf db-toggle servo-thread

# Pass button input to interlock otherwise the drawbar will engage as
# soon as spindle stops if it was toggled on during run.
net drawbar-input db-interlock.in0 <= lcec.0.0.drawbar-button
net drawbar-toggle db-interlock.out => db-toggle.in

net drawbar-on <= db-toggle.out

### interlock

#--- Engage drawbar only if spindle is stopped
net spindle-is-stopped db-interlock.in1

# TODO: Don't allow spindle rotation if drawbar is still engaged