# Argon spindle servo

# Serial port, device address, update interval in ms
# ARGON_LOG_LEVEL to get some output
loadusr -Wn argon ./argon-rs /dev/ttyUSB0 1 25

loadrt near names=near-at-speed,spindle-zero-rpm
addf near-at-speed servo-thread
addf spindle-zero-rpm servo-thread

### Spindle speed command
net spindle-speed-cmd-rps spindle.0.speed-cmd-rps => argon.spindle-speed-rps

### Spindle is running command. Used for drawbar interlock, etc
net spindle-speed-cmd-rps spindle-zero-rpm.in1
setp spindle-zero-rpm.in2 0
net spindle-is-stopped spindle-zero-rpm.out

### Spindle at speed
net spindle-fb-rps argon.spindle-fb-rps => near-at-speed.in1
net spindle-fb-rpm argon.spindle-fb-rpm
net spindle-speed-cmd-rps => near-at-speed.in2
setp near-at-speed.scale 1.15
net spindle-at-speed near-at-speed.out

### Drive fault
net drive-error argon.drive-error

### Drawbar button 
### EL7 inputs have some input filtering on them
loadrt and2 names=db-interlock
loadrt toggle names=db-toggle
addf db-interlock servo-thread
addf db-toggle servo-thread

# Pass button input to interlock otherwise the drawbar will engage as
# soon as spindle stops if it was toggled on during run.
net drawbar-input db-interlock.in0 <= lcec.0.0.drawbar-button
net drawbar-toggle db-interlock.out => db-toggle.in

net drawbar-on <= db-toggle.out

### interlock

#--- Engage drawbar only if spindle is stopped
net spindle-is-stopped db-interlock.in1

# TODO: Don't allow spindle rotation if drawbar is still engaged